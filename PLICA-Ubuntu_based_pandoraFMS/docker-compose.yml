version: '3.9'
services:

  base:
    build: 
      context: PandoraFMS/
    image: ubuntu-pandora:base
    container_name: (Use --scale base=0)
    networks:
      BASE:

  zookeeper:
    build: 
      context: Kafka-ZooKeeper/zookeeper/
      args:
        ZOOKEEPER_VERSION: ${ZOOKEEPER_VERSION}
        ZK_HOME: ${ZK_HOME}
    image: zookeeper:${ZOOKEEPER_VERSION}
    container_name: zookeeper
    ports:
      - "2181:2181"
      - "23:22"
    networks:
      KAFKA:
        ipv4_address: 172.20.0.11

  kafka:
    build: 
      context: Kafka-ZooKeeper/kafka/
      args:
        KAFKA_VERSION: ${KAFKA_VERSION}
        SCALA_VERSION: ${SCALA_VERSION}
        GLIBC_VERSION: ${GLIBC_VERSION}
        KAFKA_HOME: ${KAFKA_HOME}
    image: kafka:${KAFKA_VERSION}
    container_name: kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${KAFKA_ADVERTISED_HOST_NAME}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_ADVERTISED_PORT: ${KAFKA_ADVERTISED_PORT}
      KAFKA_PORT: ${KAFKA_PORT}
      KAFKA_HOME: ${KAFKA_HOME}
    ports:
      - "9092:9092"
    networks:
      KAFKA:
        ipv4_address: 172.20.0.2
    depends_on: 
      - zookeeper
    volumes:
      - kafka_config:/opt/kafka/config
      - /var/run/docker.sock:/var/run/docker.sock

  elasticsearch:
    build:
      context: Elasticsearch-Kibana/elasticsearch/
      args:
        EK_VERSION: ${EK_VERSION}
        ELASTIC_CREDENTIALS: ${ELASTIC_CREDENTIALS}
    image: elasticsearch:${EK_VERSION}
    container_name: elasticsearch    
    environment:
      ELASTIC_CREDENTIALS: ${ELASTIC_CREDENTIALS}
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ELASTIC_CLUSTER_NAME: ${ELASTIC_CLUSTER_NAME}
      ES_JAVA_OPTS: -Xmx${ELASTICSEARCH_HEAP} -Xms${ELASTICSEARCH_HEAP}
      discovery.type: single-node
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
      - ./Elasticsearch-Kibana/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "9200:9200"
    networks:
      ELASTICSEARCH:
        ipv4_address: 172.21.0.2  

  kibana:
    build:
      context: Elasticsearch-Kibana/kibana/
      args:
        EK_VERSION: ${EK_VERSION}
    image: kibana:${EK_VERSION}    
    container_name: kibana        
    volumes:
      - ./Elasticsearch-Kibana/kibana/config/:/usr/share/kibana/config:ro
    environment:
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ELASTIC_HOST_PORT: ${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}
    depends_on:
      - elasticsearch  
    ports:
      - "5601:5601"  
    networks:
      ELASTICSEARCH:
        ipv4_address: 172.21.0.3

  spark-base:
    build:
      context: Spark-Hadoop/base/
      args:  
        SPARK_VERSION: ${SPARK_VERSION}
        HADOOP_VERSION: ${HADOOP_VERSION}
    image: spark_base
    container_name: (Use --scale spark-base=0)
    environment:
      PYTHONHASHSEED: ${PYTHONHASHSEED}
    networks:
      SPARK:  

  spark-master:
    build:
      context: Spark-Hadoop/master/
      args:  
        SPARK_VERSION: ${SPARK_VERSION}
        HADOOP_VERSION: ${HADOOP_VERSION}
    image: spark-master:${SPARK_VERSION}-hadoop${HADOOP_VERSION}
    container_name: spark-master
    environment:
      SPARK_MASTER_PORT: ${SPARK_MASTER_PORT}
      SPARK_MASTER_WEBUI_PORT: ${SPARK_MASTER_WEBUI_PORT}
      SPARK_MASTER_LOG: ${SPARK_MASTER_LOG}
      SPARK_MASTER_NAME: ${SPARK_MASTER_NAME}
      SPARK_MASTER_PORT: ${SPARK_MASTER_PORT}
      SPARK_SUBMIT_ARGS: ${SPARK_SUBMIT_ARGS}
      #Kafka
      KAFKA_BROKER: ${KAFKA_BROKER}
      WF_TOPIC: ${WF_TOPIC}
      BT_TOPIC: ${BT_TOPIC}
      FW_TOPIC: ${FW_TOPIC}
      RF_TOPIC: ${RF_TOPIC}
      RM_TOPIC: ${RM_TOPIC}
      SM_TOPIC: ${SM_TOPIC}
      #Elastic
      ELASTICSEARCH_IP: ${ELASTICSEARCH_IP}
      ELASTICSEARCH_PORT: ${ELASTICSEARCH_PORT}
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      #Python
        #Files
      SPARK_APPLICATION_PYTHON_LOCATION_WF: ${SPARK_APPLICATION_PYTHON_LOCATION_WF}
      SPARK_APPLICATION_PYTHON_LOCATION_BT: ${SPARK_APPLICATION_PYTHON_LOCATION_BT}
      SPARK_APPLICATION_PYTHON_LOCATION_FW: ${SPARK_APPLICATION_PYTHON_LOCATION_FW}
      SPARK_APPLICATION_PYTHON_LOCATION_RF: ${SPARK_APPLICATION_PYTHON_LOCATION_RF}
      SPARK_APPLICATION_PYTHON_LOCATION_RM: ${SPARK_APPLICATION_PYTHON_LOCATION_RM}
      SPARK_APPLICATION_PYTHON_LOCATION_SM: ${SPARK_APPLICATION_PYTHON_LOCATION_SM}
        # Logs
      SPARK_APPLICATION_LOG_WF: ${SPARK_APPLICATION_LOG_WF}
      SPARK_APPLICATION_LOG_BT: ${SPARK_APPLICATION_LOG_BT}
      SPARK_APPLICATION_LOG_FW: ${SPARK_APPLICATION_LOG_FW}
      SPARK_APPLICATION_LOG_RF: ${SPARK_APPLICATION_LOG_RF}
      SPARK_APPLICATION_LOG_RM: ${SPARK_APPLICATION_LOG_RM}
      SPARK_APPLICATION_LOG_SM: ${SPARK_APPLICATION_LOG_SM}
    ports:
      - "8080:8080"
      - "7077:7077"
      - "25:22"
    networks:
      SPARK:
        ipv4_address: 172.22.0.2
    volumes:
      - spark_logs:/logs 
      - ./Spark-Hadoop/base/PLICA_V6/:/app  

  worker:
    build:
      context: Spark-Hadoop/worker/
      args:  
        SPARK_VERSION: ${SPARK_VERSION}
        HADOOP_VERSION: ${HADOOP_VERSION}
    image: spark-worker:${SPARK_VERSION}-hadoop${HADOOP_VERSION}
    container_name: worker
    depends_on:
      - spark-master
    environment:
      SPARK_MASTER: ${SPARK_MASTER}
      SPARK_WORKER_WEBUI_PORT: ${SPARK_WORKER_WEBUI_PORT} 
      SPARK_WORKER_LOG: ${SPARK_WORKER_LOG} 
      SPARK_WORKER_CORES: ${SPARK_WORKER_CORES} 
      SPARK_WORKER_MEMORY: ${SPARK_WORKER_MEMORY}
    ports:
      - "26:22" 
    networks:
      SPARK:
    volumes:
      - ./Spark-Hadoop/base/PLICA_V6/:/app     

  elastalert:
    build:
      context: Elastalert/
      args:  
        ELASTALERT_VERSION: ${ELASTALERT_VERSION}
    image: elastalert:${ELASTALERT_VERSION}
    container_name: elastalert
    depends_on:
      - elasticsearch
      - kibana
      - kafka
      - zookeeper
      - spark-master
      - spark-base
    environment:
      TZ: ${TZ}
      ELASTICSEARCH_IP: ${ELASTICSEARCH_IP}
      ELASTICSEARCH_PORT: ${ELASTICSEARCH_PORT}
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
    ports:
      - "27:22"   
    networks:
      ELASTALERT:
        ipv4_address: 172.23.0.2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./Elastalert/configFiles/:/opt/config
      - ./Elastalert/rules:/opt/rules
  
  fuseki:
    build:
      context: Fuseki/
      args:  
        FUSEKI_VERSION: ${FUSEKI_VERSION}
    image: fuseki:${FUSEKI_VERSION}
    container_name: fuseki
    depends_on:
      - elasticsearch
      - kibana
      - kafka
      - zookeeper
      - spark-master
      - spark-base
    environment:
      FUSEKI_VERSION: ${FUSEKI_VERSION}
      FUSEKI_IP: ${FUSEKI_IP}
      ELASTICSEARCH_IP: ${ELASTICSEARCH_IP}
      ELASTICSEARCH_PORT: ${ELASTICSEARCH_PORT}
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ELASTICSEARCH_INDEX: ${ELASTICSEARCH_INDEX}
    ports:
      - "3030:3030"
      - "28:22"  
    networks:
      FUSEKI:
        ipv4_address: 172.24.0.2      

networks:
  KAFKA:
    driver: bridge
    ipam:
      driver: default 
      config:
        - subnet: 172.20.0.0/24
          gateway: 172.20.0.1
  ELASTICSEARCH:
    driver: bridge
    ipam:
      driver: default 
      config:
        - subnet: 172.21.0.0/24
          gateway: 172.21.0.1
  SPARK:
    driver: bridge
    ipam:
      driver: default 
      config:
        - subnet: 172.22.0.0/24
          gateway: 172.22.0.1  
  ELASTALERT:
    driver: bridge
    ipam:
      driver: default 
      config:
        - subnet: 172.23.0.0/24
          gateway: 172.23.0.1
  FUSEKI:
    driver: bridge
    ipam:
      driver: default 
      config:
        - subnet: 172.24.0.0/24
          gateway: 172.24.0.1          
  BASE:
    driver: bridge
    ipam:
      driver: default 
      config:
        - subnet: 172.0.0.0/24
          gateway: 172.0.0.1               
volumes:
  kafka_config: 
  elasticsearch:
  spark_logs: 